import Graphics.Gloss
import Graphics.Gloss.Interface.Pure.Game

-- Game constants
windowWidth, windowHeight :: Int
windowWidth = 800
windowHeight = 600

gridWidth, gridHeight :: Int
gridWidth = 10
gridHeight = 7
tileSize :: Float
tileSize = 60

-- Game state
data Game = Game
  { towers :: [(Float, Float)]  -- List of tower positions
  , enemies :: [(Float, Float)]  -- List of enemy positions
  }

-- Initial game state
initialGame :: Game
initialGame = Game {towers = [], enemies = [(100, 0), (200, 0)]}

-- Draw the game state
drawGame :: Game -> Picture
drawGame (Game towers enemies) =
    pictures (background : towerPics ++ enemyPics)
  where
    -- Background (simple color fill)
    background = color (greyN 0.2) (rectangleSolid (fromIntegral windowWidth) (fromIntegral windowHeight))

    -- Draw towers (simple blue circles)
    towerPics = [color blue (translate x y (circleSolid 20)) | (x, y) <- towers]

    -- Draw enemies (simple red circles)
    enemyPics = [color red (translate x y (circleSolid 15)) | (x, y) <- enemies]

-- Update the game state (move enemies)
updateGame :: Float -> Game -> Game
updateGame _ (Game towers enemies) =
  Game towers (map moveEnemy enemies)
  where
    moveEnemy (x, y) = (x, y + 2)  -- Move enemies downwards (can be expanded)

-- Handle input (mouse click to place towers)
handleInput :: Event -> Game -> Game
handleInput (EventKey (MouseButton LeftButton) Down _ (x, y)) game =
  game {towers = towers game ++ [(x, y)]}
handleInput _ game = game

-- Main function to start the game
main :: IO ()
main = play
  (InWindow "Tower Defense" (windowWidth, windowHeight) (100, 100))
  white  -- Background color
  60     -- Frames per second
  initialGame
  drawGame  -- Drawing function
  handleInput  -- Input handler
  updateGame  -- Update function

